name: Build Client

on:
  push:
    branches:
      - main
      - 'feat/**'

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'  # Specify the Python version here

    - name: Install dependencies
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build client.py
      run: |
        source venv/bin/activate
        cd client/src
        ../../venv/bin/pyinstaller --onefile --hidden-import='PIL._tkinter_finder' client.py

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: client-linux
        path: client/src/dist/client

  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'  # Specify the Python version here

    - name: Install dependencies
      run: |
        python -m venv venv
        .\venv\Scripts\activate
        pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build client.py
      run: |
        .\venv\Scripts\activate
        cd client\src
        ..\..\venv\Scripts\pyinstaller --onefile --hidden-import='PIL._tkinter_finder' client.py

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: client-windows
        path: client\src\dist\client.exe
  create-release:
    needs: [ build-linux, build-windows ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: client-linux
          path: ./dist/client-linux

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: client-windows
          path: ./dist/client-windows

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Linux Build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/client-linux/client
          asset_name: client-linux
          asset_content_type: application/octet-stream

      - name: Upload Windows Build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/client-windows/client.exe
          asset_name: client-windows.exe
          asset_content_type: application/octet-stream